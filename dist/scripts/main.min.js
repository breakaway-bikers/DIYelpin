angular.module("yelpin",["ui.router","yelpin.postList","yelpin.viewPost","yelpin.services","yelpin.signin","yelpin.signup","yelpin.createPost","yelpin.factory","yelpin.contest"]).config(function(t,e){t.state("signin",{templateUrl:"Authentication/views/signin.html",url:"/signin",controller:"signinController"}).state("signup",{templateUrl:"Authentication/views/signup.html",url:"/signup",controller:"signupController"}).state("createPost",{templateUrl:"CreatePost/createPost.html",url:"/createPost",controller:"createPostController"}).state("postList",{templateUrl:"PostList/postList.html",url:"/postList",controller:"postListController"}).state("viewPost",{templateUrl:"ViewPost/viewPost.html",url:"/viewPost",controller:"viewPostController"}).state("contest",{templateUrl:"Contest/contestViews/contest.html",url:"/contest",controller:"contestController"}),e.otherwise("/signin")}),angular.module("yelpin.createPost",[]).controller("createPostController",["$scope","appFactory",function(t,e){t.username="",t.descript="",t.txtcomment="",t.category="",t.comment=[],t.postToPage=function(){""!=t.txtcomment&&(console.log(t.txtcomment),console.log(t.descript),t.comment.push(t.txtcomment));var o={title:t.descript,message:t.txtcomment,category:t.category};console.log(o),e.setPost(o).then(function(t){console.log(t)}),t.txtcomment="",t.descript="",t.category=""}}]),angular.module("yelpin.factory",[]).factory("appFactory",["$http",function(t){var e=function(t){};return{setPost:e}}]),angular.module("yelpin.postList",[]).controller("postListController",["$scope","$http","ViewPost",function(t,e,o){t.fetchedPosts="Currently fetching posts",t.fetchPost=function(){return e.get("/postList").then(function(e){console.log(e.data,e.body),t.fetchedPosts=e.data})},t.viewPost=function(t){o.set(t)},t.fetchPost()}]),angular.module("yelpin.viewPost",[]).controller("viewPostController",["$scope","ViewPost",function(t,e){t.receivedData="Fetching Data",t.fetchPost=function(){t.receivedData=e.get(),console.log(t.receivedData)},t.fetchPost()}]),angular.module("yelpin.services",[]).factory("ViewPost",function(){var t={},e=function(e){t=e},o=function(){return t};return{set:e,get:o}}),describe("YELPIN",function(){beforeEach(module("yelpin"));var t,e,o,n,s;beforeEach(inject(function(n,i,r,c,l){t=n,o=i,s=c;s.when("GET","Authentication/views/signin.html").respond(),s.when("GET","PostList/postList.html").respond();e={username:"raphael",password:"shoes"}})),afterEach(function(){s.verifyNoOutstandingExpectation(),s.verifyNoOutstandingRequest()}),describe("signinController",function(){var n=function(){return t("signinController",{$scope:o})};it("signin function exists",function(){n();s.flush(),expect(o.signin).toEqual(jasmine.any(Function))}),it("should post the argument to /authenticate",function(){s.expectPOST("/authenticate",e).respond(200,e);n();o.signin(e),s.flush()}),it("should catch errors",function(){s.expectPOST("/authenticate",e).respond(401,e);n();o.signin(e),s.flush(),expect(o.signinError).toEqual(!0)}),it("should attach response data to scope.user",function(){s.expectPOST("/authenticate",e).respond(201,e);n();o.signin(e),s.flush(),expect(o.user).toEqual(e)})}),describe("signupController",function(){var i=function(){return t("signupController",{$scope:o})};beforeEach(inject(function(t,e){$rootScope=t,n=e})),it("$scope.signup should be a function",function(){i();s.flush(),expect(o.signup).toEqual(jasmine.any(Function))}),it("should set $scope.user to null on error",function(){s.expectPOST("/createUser").respond(401,e),spyOn(n,"path").and.returnValue("/");i();o.signup(e),s.flush(),expect(o.user).toEqual(null)}),it("should redirect to /signin",function(){s.expectPOST("/createUser").respond(200,e),spyOn(n,"path").and.returnValue("/");i();o.signup(),s.flush(),expect(n.path).toHaveBeenCalled()})}),describe("postListController",function(){var e=function(){return t("postListController",{$scope:o})};it("$scope.fetchPost should be a function",function(){s.expectGET("/postList").respond(200);e();s.flush(),expect(o.fetchPost).toEqual(jasmine.any(Function))}),it("$scope.viewPost should be a function",function(){s.expectGET("/postList").respond(200);e();s.flush(),expect(o.viewPost).toEqual(jasmine.any(Function))}),xit("should set fetchPostError to true if an error is caught",function(){s.expectGET("/postList").respond(401);e();s.flush(),expect(o.fetchPostError).toEqual(!0)}),it("should attach an array of posts to $scope.fetchedPosts",function(){s.expectGET("/postList").respond(200,[1,2,3]);e();s.flush(),expect(o.fetchedPosts.length).not.toBeUndefined()})}),describe("createPostController",function(){var e=function(){return t("createPostController",{$scope:o})};it("$scope.postToPage should be a function",function(){e();s.flush(),expect(o.postToPage).toEqual(jasmine.any(Function))}),describe("createPost factories",function(){var t=null;beforeEach(inject(function(e){t=e})),it("appFactory.setPost should be a function",function(){e();s.flush(),expect(t.setPost).toEqual(jasmine.any(Function))}),xit("postToPage should call setPost",function(){spyOn(t,"setPost"),s.expectPOST("/createPost").respond(200,{});e();o.postToPage(),s.flush(),expect(t.setPost).toHaveBeenCalled()})})})}),angular.module("yelpin.signin",[]).controller("signinController",["$scope","$http","$location",function(t,e,o){t.signinError=!1,t.signin=function(n){return console.log("POST TO /AUTHENTICATE: ",n),e.post("/authenticate",n).then(function(e,n){console.log("heres the data and status",e),t.user=e.data,200===e.status&&o.path("/postList")})["catch"](function(e){t.signinError=!0})}}]),angular.module("yelpin.signup",[]).controller("signupController",["$scope","$http","$location",function(t,e,o){t.signup=function(n){return console.log("post to /createUser : ",n),e.post("/createUser",n).then(function(t){console.log("user post success",t.status),200===t.status&&o.path("/signin")})["catch"](function(e){t.user=null,console.log("Invalid Input",e)})}}]),angular.module("yelpin.contest",[]).controller("contestController",["$scope","ViewPost","$http",function(t,e,o){t.ingredients={1:"Mustard Greens",2:"Collard Greens",3:"Dandelion Greens",4:"Kumquats",5:"Quail",6:"Black Garlic",7:"Tomatillos",8:"Rhubarb",9:"Baby Fennel",10:"Cactus Pears",11:"Zucchini",12:"Strawberries",13:"Avocados",14:"Escarole",15:"Duck Breast",16:"Rainbow Chard",17:"Jicama",18:"Blueberries",19:"Pineapple",20:"Mussels",21:"Corn",22:"Lime",23:"Carrots",24:"Celery",25:"Spinach",26:"Onion",27:"Rice",28:"Raspberries",29:"Endive",30:"Scallions",31:"Peas",32:"Chili Peppers",33:"Coffee",34:"Muskmelon",35:"Grapes",36:"Peaches",37:"Mango",38:"Hazelnuts",39:"Green Bell Peppers"},t.dailyIngredients=[],t.populateDaily=function(){for(var e=0;5>e;e++){for(var o=Math.floor(39*Math.random())+1,n=t.ingredients[o],s=!1,i=0;i<t.dailyIngredients.length;i++){var r=t.dailyIngredients[i];n===r&&(s=!0)}s?e-=1:s||t.dailyIngredients.push(n)}},t.populateDaily(),t.receivedData="Fetching Data",t.fetchedPosts="Currently fetching posts",t.fetchPost=function(){return o.get("/postList").then(function(e){console.log(e.data,e.body),t.fetchedPosts=e.data})},t.fetchPost()}]);